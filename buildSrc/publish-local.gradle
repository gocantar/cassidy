if (!rootProject.hasProperty('version')) {
    return
}

apply plugin: 'maven-publish'

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

def versionName = rootProject.ext.has("version") ? rootProject.ext.version : rootProject.properties['version']

publishing {
    repositories {
        maven { url mavenLocal() }
    }
    publications {
        maven(MavenPublication) {
            groupId rootProject.properties['groupId']
            artifactId project.name
            version versionName
            artifact "${project.buildDir}/outputs/aar/${project.name}-release.aar"
            artifact sourcesJar
            pom {
                packaging = hasProperty("pacakge_type") ? pacakge_type : "aar"
                withXml {
                    def root = asNode().appendNode('dependencies')
                    addAllDependencyWithScope(root, 'compile', 'compile')
                    addAllDependencyWithScope(root, 'api', 'compile')
                    addAllDependencyWithScope(root, 'implementation', 'runtime')
                    addAllDependencyWithScope(root, 'compileOnly', 'provided')
                }
            }
        }
    }
}

def addAllDependencyWithScope(root, scope, pomScope) {
    configurations.findByName(scope)
            .dependencies
            .findAll { it.group }
            .each { dependency ->
                root.appendNode('dependency').with {
                    appendNode('groupId', dependency.group)
                    appendNode('artifactId', dependency.name)
                    appendNode('version', dependency.version)
                    appendNode('scope', pomScope)
                }
            }
}